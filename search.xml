<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>灵性的实相</title>
    <url>/2020/03/23/%E7%81%B5%E6%80%A7%E7%9A%84%E5%AE%9E%E7%9B%B8/</url>
    <content><![CDATA[<p><strong>开悟之道</strong></p>
<p>宇宙即心、即佛、即主，</p>
<p>宇宙是生命的大本营，</p>
<p>自然万物的发源地，</p>
<p>通此理者，是名：明心。</p>
<p>生命的同体为：心，</p>
<p>个体为：性。</p>
<p>性是心的缩影，</p>
<p>性是心的传承，</p>
<p>性，即是：心。</p>
<p>在人身上亦名：心性，</p>
<p>即：小宇宙。</p>
<p>悟此相者，是名：见性。</p>
<p>见性皈心者，是名：解脱。</p>
<h2 id="灵性的实相之一：宇宙能量"><a href="#灵性的实相之一：宇宙能量" class="headerlink" title="灵性的实相之一：宇宙能量"></a>灵性的实相之一：宇宙能量</h2><p>宇宙能量遍及宇宙，无所不在。</p>
<p>它连结着银河、地球、人类和分子，</p>
<p>它是众生万物之间的空间，</p>
<p>它是使整个宇宙井然有序的连结键。</p>
<p>宇宙能量就是生命的势能，</p>
<p>宇宙能量是维持生命秩序和扩展意识的要素。</p>
<p>宇宙能量是所有行动和生理功能的基础，</p>
<p>我们在深睡和完全的静默中</p>
<p>接收到一部份的宇宙能量，</p>
<p>再运用这个能量从事日常的心灵活动。</p>
<p>例如，</p>
<p>观看、说话、聆听、思考和所有的身体活动。</p>
<p>在睡眠中获得的有限能量</p>
<p>并不能满足这些活动的需要，</p>
<p>这就是我们会感到疲惫、倦怠和紧张不安的原因。</p>
<p>这些现象导致了身、心的压力和各种疾病，</p>
<p>克服这些压力和疾病的唯一之道，</p>
<p>就是获得更多的宇宙能量。</p>
<p>宇宙能量是维持生命秩序、</p>
<p>活出健康和快乐的要素，</p>
<p>它让我们全心地专注在当下的情境，</p>
<p>它让我们获得知识，</p>
<p>让我们扩展意识。</p>
<p>只有透过静坐，</p>
<p>我们才能汲取到充沛的宇宙能量。</p>
<h2 id="灵性的实相之二：静坐"><a href="#灵性的实相之二：静坐" class="headerlink" title="灵性的实相之二：静坐"></a>灵性的实相之二：静坐</h2><p>睡眠是无意识的静坐，</p>
<p>静坐是有意识的睡眠。</p>
<p>在睡眠中，</p>
<p>我们只能获得有限的能量。</p>
<p>在静坐中，</p>
<p>我们获得了源源不绝的能量。</p>
<p>这种能量可以提升身体、心灵和智能的力量，</p>
<p>它开启了第六感之门，</p>
<p>进入超感官的领域。</p>
<p>在静坐中获得的能量带给我们松弛、健康和快乐，</p>
<p>它也能让体能迈入一个更高的境界。</p>
<p>其实，</p>
<p>静坐就是意识回归自性的旅程。</p>
<p>在静坐中，</p>
<p>我们有意识地由身体开始，</p>
<p>进行穿越心灵、智能、自性和更高境界的旅行。</p>
<p>我们要先停止一切的身、心的功能，</p>
<p>才能达到静坐的目的。</p>
<p>也就是说，</p>
<p>停止肢体的活动、观看、说话和思考。</p>
<p>现在让我们来谈谈静坐的方法。</p>
<p>静坐的第一步就是姿势，</p>
<p>你可以选择任何一种坐姿，</p>
<p>选择一个让你感到很舒服、很稳定的姿势，</p>
<p>坐在地板上或者椅子上都可以，</p>
<p>或者在任何一个我们感觉舒服的地方，</p>
<p>舒服地坐下来。</p>
<p>只要放松，</p>
<p>完全地放松下来，</p>
<p>单纯地放松。</p>
<p>当我们盘好腿和双手交叉好的时候，</p>
<p>身体形成的能量回路会让身体更加稳定。</p>
<p>眼睛是心灵之窗，</p>
<p>所以应该把眼睛闭上。</p>
<p>持咒或内、外在的对话都是心灵的活动，</p>
<p>所以也应该停止。</p>
<p>身体放松之后，</p>
<p>意识就会进入心灵和智能所在的第二个区域。</p>
<p>心灵只不过是一堆念头而已，</p>
<p>纷杂的念头会不断地浮到心灵的表层。</p>
<p>念头会带来各种已知或未知的问题，</p>
<p>这是静坐的关键，</p>
<p>也是唯一的法门。</p>
<p>不要追究你的念头，</p>
<p>不要执着在各种妄念、问题或念头上，断绝念头。</p>
<p>停留在眉心的位置上，</p>
<p>这是一个没有呼吸也没有念头的状态。</p>
<p>你所有的念头都止息了，</p>
<p>我们称为无念的状态。</p>
<p>这是一个静心的状态，</p>
<p>在这个状态下，</p>
<p>我们开始接收源源不绝的宇宙能量。</p>
<p>坐的时间越久，</p>
<p>我们接受的宇宙能量就越多。</p>
<p>宇宙能量在我们的能量体内流动。</p>
<p>能量体也叫做以太体。</p>
<h2 id="灵性的实相之三：能量体"><a href="#灵性的实相之三：能量体" class="headerlink" title="灵性的实相之三：能量体"></a>灵性的实相之三：能量体</h2><p>能量体是由</p>
<p>七万二千个气脉或能量管所组成的，</p>
<p>每一个能量管都由头顶的部位出发，</p>
<p>这个部位叫做梵穴。</p>
<p>这些气脉像植物的根和枝桠一样，</p>
<p>伸展到全身的每一个部位。</p>
<p>能量体是生命的基本设计，</p>
<p>这个能量体</p>
<p>是所有活动甚至存在的主要源头。</p>
<p>能量体会在我们深睡和静坐的时候</p>
<p>接收宇宙能量，</p>
<p>我们使用接收到的宇宙能量</p>
<p>进行观看、说话、倾听、思考等身、心活动。</p>
<p>这些功能都靠着我们接收来的宇宙能量才能运作。</p>
<p>我们的念头决定了宇宙能量的流通，</p>
<p>念头会阻碍宇宙能量的畅通。</p>
<p>换言之，</p>
<p>念头是阻挡宇宙能量进入身体的绊脚石。</p>
<p>进入身体的宇宙能量变少，</p>
<p>能量管里的能量就会耗尽。</p>
<p>然后，</p>
<p>能量体就会出现以太破洞，</p>
<p>以太破洞逐渐导致身体的疾病。</p>
<p>换言之，</p>
<p>所有疾病的起因是因为以太体缺乏能量。</p>
<p>静坐的时候，</p>
<p>我们可以获得充沛的宇宙能量。</p>
<p>宇宙能量在能量体内的所有能量管内流通，</p>
<p>宇宙能量强大的流势</p>
<p>可以清洗所有的以太破洞。</p>
<p>以太破洞清洗干净以后，</p>
<p>我们就摆脱了疾病。</p>
<p>能量开始在梵穴流动的时候，</p>
<p>我们的头部或全身会有沉重的感觉。</p>
<p>某一特定区域的能量管清洗干净的时候，</p>
<p>身体会有刺痒或疼痛的感觉。</p>
<p>有时候，</p>
<p>身体的不同部位都会感到疼痛。</p>
<p>这种疼痛不需要吃药，</p>
<p>多做一些静坐之后，</p>
<p>所有的疼痛感会自然消失。</p>
<p>透过静坐获得越来越多的能量，</p>
<p>可以让我们摆脱所有的身、心疾病。</p>
<p>在金字塔里静坐，</p>
<p>它的效果比一般的静坐快三倍。</p>
<h2 id="灵性的实相之四：金字塔的威力"><a href="#灵性的实相之四：金字塔的威力" class="headerlink" title="灵性的实相之四：金字塔的威力"></a>灵性的实相之四：金字塔的威力</h2><p>金字塔是地球上最稳固的结构，</p>
<p>也是接收最高宇宙能量的地方。</p>
<p>金字塔以52度51分的角度形成，</p>
<p>这个角度让金字塔接收到最高的宇宙能量。</p>
<p>金字塔可以用任何建材制造，</p>
<p>金字塔的建材不会影响宇宙能量的接收。</p>
<p>金字塔的四个端角必须与东、西、南、北四大方向对位。</p>
<p>宇宙能量累积在金字塔1/3的高度，</p>
<p>这个位置就叫做国王的密室。</p>
<p>宇宙能量在最强的国王密室里向整个金字塔扩散。</p>
<p>在金字塔顶端安置一个水晶，</p>
<p>可以把接收的宇宙能量强化后再扩散到其它的部位。</p>
<p>在金字塔里静坐，</p>
<p>我们达到无念状态的速度比其它地方快三倍。</p>
<p>金字塔可以与高层的频率沟通，</p>
<p>在金字塔里静坐有治疗的效果，</p>
<p>也可以提升静坐的体验。</p>
<h2 id="灵性的实相之五：第三眼"><a href="#灵性的实相之五：第三眼" class="headerlink" title="灵性的实相之五：第三眼"></a>灵性的实相之五：第三眼</h2><p>第三眼是灵魂</p>
<p>用来观看、感觉和倾听高频率实相的利器，</p>
<p>我们把这三种灵魂的功能称为第三眼。</p>
<p>静坐中可以获得更多的能量，</p>
<p>更多的能量可以开启我们的第三眼。</p>
<p>这是一个非常殊胜的经验，</p>
<p>第三眼开启的时候，</p>
<p>前额会产生刺痒或拉扯的感觉。</p>
<p>我们开始瞥见各种色光在身边回绕旋转，</p>
<p>也能听见喃喃的低语声和走路声，</p>
<p>有一种彷佛在漆黑的隧道里旅行的感觉。</p>
<p>以太体由静坐中获得足够的宇宙能量后，</p>
<p>第三眼的视力越来越精纯，</p>
<p>我们可以清晰地看到世间和其它存在界的景象。</p>
<p>精纯的第三眼让我们拥有比肉眼更透彻的视觉，</p>
<p>我们可以看到其它频率的实相，</p>
<p>我们可以看到五官无法感知的事物，</p>
<p>我们也会有许多无法用言语表达出来的感受。</p>
<p>我们会听到内在的声音或其它频率传来的乐器声，</p>
<p>我们可以看见已经不在世的大师示现，</p>
<p>我们可以看见大师以我们熟悉的形体示现。</p>
<p>静坐的工夫深入之后，</p>
<p>我们开始看到以明光示现的大师，</p>
<p>我们甚至可以在明光中认出大师的身份，</p>
<p>我们会听到大师的给我们的讯息，</p>
<p>我们有一种在隧道中摸索后终于与光合一的感觉。</p>
<p>透过第三眼的体验，</p>
<p>透过大师的讯息，</p>
<p>透过看到或感觉到其它频率的实相，</p>
<p>我们解开了所有生命的答案。</p>
<p>透过它我们有了新的选择，</p>
<p>我们的信念改变了，</p>
<p>我们的知解改变了。</p>
<p>有了第三眼的经验之后，</p>
<p>我们对物质界的感知改变了。</p>
<h2 id="灵性的实相之六：星光体出游"><a href="#灵性的实相之六：星光体出游" class="headerlink" title="灵性的实相之六：星光体出游"></a>灵性的实相之六：星光体出游</h2><p>星光体是自性用来感知其它频率实相的工具。</p>
<p>星光体就像我们的肉体一样，</p>
<p>它是意识的另一个形相。</p>
<p>在正常状态下，</p>
<p>意识遍布在身体的每一个部位，</p>
<p>我们接收了足够的能量后，</p>
<p>开始感知到其它频率的实相，</p>
<p>意识开始以星光体的形相活动。</p>
<p>在睡梦中，</p>
<p>我们无意识地感知到星光体的经验。</p>
<p>在静坐中，</p>
<p>我们是有意识地感知到星光体的存在。</p>
<p>星光体可以穿越时间和空间。</p>
<p>在意识到星光体的存在之后，</p>
<p>我们开始感知到新的次元。</p>
<p>在静坐中接收充沛的宇宙能量后，</p>
<p>遍布在身体内的意识开始朝着一个点移动。</p>
<p>意识移动的时候，</p>
<p>身体会微微地颤动，</p>
<p>我们会有身体在飘浮的感觉，</p>
<p>但却感觉不到手和脚的存在。</p>
<p>这时候，</p>
<p>身体有一股像羽毛般的轻安感，</p>
<p>身体的不同部位可能会出现移动的感觉，</p>
<p>有时候甚至会有整个身体都在旋转的感觉，</p>
<p>这就是所谓的星光移动。</p>
<p>静坐的经验越多，</p>
<p>我们获得的宇宙能量就越多。</p>
<p>意识以星光体的形相快速地旋转，</p>
<p>接着引发身体的移动。</p>
<p>身体移动之后，</p>
<p>星光体开始沿着一条银带离开身体。</p>
<p>肉体和星光体</p>
<p>靠着这一条由高振幅意识组成的银带</p>
<p>彼此传递讯息，</p>
<p>星光体透过银带开始神游太虚。</p>
<p>星光体出游就是意识离开身体，</p>
<p>到一些已知的和未知的地方和频率去。</p>
<p>透过星光体出游，</p>
<p>我们获得了至高无上的知识和对自性的明白。</p>
<p>星光体出游的时候，</p>
<p>可以穿越一切有形的物质，</p>
<p>例如，</p>
<p>土、水、火、风和以太四大元素。</p>
<p>星光体可以毫无阻碍地游访其它的频率。</p>
<p>星光体出游的时候，</p>
<p>静坐者看到了自己的肉身，</p>
<p>他获得了卓越的洞见，</p>
<p>他明白身体只是他暂时的居所，</p>
<p>他明白自己不只是身体和心灵而已，</p>
<p>这是一次了不起的明白。</p>
<p>每一个人都应该有一次星光体出游的经验，</p>
<p>经历过星光体出游之后，</p>
<p>我们的局限感消失了，</p>
<p>我们明白自己是无限的。</p>
<p>有了这一番体验，</p>
<p>让我们明白自己就是意识，</p>
<p>明白自己是无限的，</p>
<p>也明白了生命中许多崭新的次元。</p>
<h2 id="灵性的实相之七：涅槃"><a href="#灵性的实相之七：涅槃" class="headerlink" title="灵性的实相之七：涅槃"></a>灵性的实相之七：涅槃</h2><p>我们接收的宇宙能量，</p>
<p>随着静坐的工夫而不断地增加。</p>
<p>宇宙能量改善了我们对当下的投入。</p>
<p>身体——心灵——自性</p>
<p>对当下投入得越多，</p>
<p>我们会对情境有更透彻的明白，</p>
<p>这一份明白就是知识。</p>
<p>一般人只能由情境中获得经验，</p>
<p>无法感知到情境中蕴涵的知识，</p>
<p>这是因为他们只用形体来了解情境的缘故。</p>
<p>但静坐者却能完全地了解情境，</p>
<p>因为他知道自己不只是一具肉身而已，</p>
<p>他知道他是肉身里的居住者，</p>
<p>他明白所有的情境都是为了生命的进化而发生的。</p>
<p>有了这些体验并且把体验落实在日常生活中，</p>
<p>我们获得了生命的真知卓见，</p>
<p>这一份真知卓见开启了千万道生命的妙门，</p>
<p>揭示了感知的新次元。</p>
<p>我们的理解力、感知力和知识获得了无限的扩展，</p>
<p>接着，我们的意识随之扩展，</p>
<p>开启了浩瀚的智慧之海，</p>
<p>我们称这样的智慧是千瓣金莲。</p>
<p>每一瓣莲花都代表着一个解悟的新次元，</p>
<p>感知到的次元越多，</p>
<p>我们就获得越多其它存在的知识。</p>
<p>这一份解悟让我们知道，</p>
<p>生命没有死亡，</p>
<p>我们是永恒的存在。</p>
<p>我们明白了何谓生？何谓死？</p>
<h2 id="灵性的实相之八：生与死"><a href="#灵性的实相之八：生与死" class="headerlink" title="灵性的实相之八：生与死"></a>灵性的实相之八：生与死</h2><p>我们来到世间的时候，</p>
<p>只是一粒宇宙意识的微尘。</p>
<p>我们的自性以以太体的结构离开了它的源头，</p>
<p>我们为了经历独特的经验而来到世间。</p>
<p>我们为了体验世间的经验而选择投胎于子宫、父母、环境和生命的情境。</p>
<p>自性完全了知生命的整体设计……</p>
<p>意识微尘选择了母亲之后，开始进入母亲的子宫。</p>
<p>意识进入子宫后，胎儿就有了生命。肉体依照以太体内的宇宙能量和因缘而产生了形状。在第一次呼吸之前，意识会频繁地回到源头。胎儿离开母亲的子宫后，开始了他生命中的第一次体外呼吸，这就是我们所谓的诞生。</p>
<p>从诞生到七岁之前，我们对源头是有意识的。心灵在七岁的时候开始成形，在14岁时成形完整。智能在14岁时开始启动，到21岁时发展完成。在21岁到28岁之间，我们经验到了身体、心灵和智能的结合。从28岁开始，生命的发展完全仰赖自性的知识。</p>
<p>一个对自性没有觉知的人，</p>
<p>他的意识就会停滞在身体和心灵之间。</p>
<p>意识的停滞是悲苦的开始，</p>
<p>这样的人不了解生命的情境。</p>
<p>他的生活中充满了危机，</p>
<p>他开始进入僵化的概念里。</p>
<p>僵化封闭了宇宙能量的流动，</p>
<p>能量的封闭使他饱受疾病、压力和紧张之苦。</p>
<p>他在毫无觉知的状态下虚渡一生，</p>
<p>他不了解生命的目的何在。</p>
<p>他由童年、青壮年到老年，</p>
<p>在没有完成生命的目的之前离开了人间，</p>
<p>这就是我们所谓的死亡。</p>
<p>即使在死亡之后，</p>
<p>抱持错误知解的僵化心灵，</p>
<p>仍然不允许意识回归它的源头。</p>
<p>在错误的知解下，</p>
<p>他创造了地狱和天堂，</p>
<p>徘徊在一个低层的星光界里。</p>
<p>活在自性中的生命，</p>
<p>让一个人在任何情境中都洋溢着喜福，</p>
<p>即使死后可能进入较低的频率中，</p>
<p>他终究还是会回归源头。</p>
<h2 id="灵性的实相之九：开悟"><a href="#灵性的实相之九：开悟" class="headerlink" title="灵性的实相之九：开悟"></a>灵性的实相之九：开悟</h2><p>透过第三眼、星光体出游和生死的知识，而获得高层的知识以后，我们就会对身体、心灵、智能、自性和生命力有了圆满的了解。了解意识是能量和知识的结合，了解意识为了获得更多的能量、知识，为了创造而来到世间。</p>
<p>在这一份明白中生活，我们才能对造化的存在有更深一层的了解。有了这一份明白，我们变成了一个奇迹的创造者。</p>
<p>然后，我们的一言一语都会成真，起心动念都会化现，一举一动无处不见创意，这就是开悟……</p>
<blockquote>
<p>最后附上视频链接：<a href="https://tv.sohu.com/v/cGwvNTYzNzQ2Ny8xNDE1MzQzOS5zaHRtbA==.html" target="_blank" rel="noopener">点击跳转</a></p>
</blockquote>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>灵性</tag>
      </tags>
  </entry>
  <entry>
    <title>浏览器原理</title>
    <url>/2019/11/15/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h2 id="浏览器的组成"><a href="#浏览器的组成" class="headerlink" title="浏览器的组成"></a>浏览器的组成</h2><ol>
<li>人机交互部分 （ui）</li>
<li>网络请求部分 （Socker）</li>
<li><strong>Javascript引擎部分</strong>（解析执行Javascript）</li>
<li><strong>渲染引擎部分</strong> （渲染html，css等）</li>
<li>数据存储功能 （cookie，以及html5中localStorage,sessionStorage)</li>
</ol>
<h2 id="主流渲染引擎介绍"><a href="#主流渲染引擎介绍" class="headerlink" title="主流渲染引擎介绍"></a>主流渲染引擎介绍</h2><blockquote>
<p><strong>渲染引擎</strong> 又叫做 <strong>排版引擎</strong> 或 <strong>浏览器内核</strong></p>
</blockquote>
<ul>
<li><strong>Chrome</strong>： Blink引擎（Webkit的一个分支）</li>
<li><strong>Safari</strong>： Webkit引擎</li>
<li><strong>FireFox</strong>： Gecko引擎</li>
<li><strong>Opera</strong>： Blink引擎</li>
<li><strong>InternetExplorer</strong>： Trident引擎</li>
<li><strong>Microsoft Edge</strong>： EdgeHTML引擎（Trident的一个分支）</li>
</ul>
<blockquote>
<p>主流渲染引擎的工作原理</p>
</blockquote>
<ol>
<li>解析HTML构建的DOM树（Document Object Model，文档对象模型）</li>
<li>构建渲染树，渲染树并不等同于DOM树，因为像 <strong><em>head 或 display：none</em></strong>这样的元素就没有必要放到渲染树里面。但是他们仍然在DOM树中。</li>
<li>对渲染树进行布局，定位坐标和大小，确定是否换行，确定position，overflow，z-index等等，这个过程叫：<strong><em>“layout” 或 “reflow”</em></strong>。</li>
<li>绘制渲染树，调用操作系统底层的API进行绘图操作。<br><a href="https://www.youtube.com/watch?v=ZTnlxlA5KGw" target="_blank" rel="noopener">浏览器reflow，layout过程</a></li>
</ol>
<h2 id="浏览器访问网站的过程"><a href="#浏览器访问网站的过程" class="headerlink" title="浏览器访问网站的过程"></a>浏览器访问网站的过程</h2><ol>
<li>在浏览器地址栏中输入网址</li>
<li>浏览器通过用户在地址栏中输入的URL构建HTTP请求报文<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: www.baidu.com</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</span><br><span class="line">Sec-Fetch-Site: none</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: BIDUPSID=F08DB5B2FD9E13D4B41996E638172B7E; PSTM=1573701135; BAIDUID=F08DB5B2FD9E13D4B19EAE477B7A6495:FG=1; BD_UPN=123253; BDORZ=B490B5EBF6F3CD402E515D22BCDA1598; H_PS_PSSID=1432_21114_30125_29567_29700_29221; H_PS_645EC=84a0DbiQzd2BHJhWsNQFFY6AzZdRfYqCefjKNfcjGAOJW8CxuHjm%2BQDhKZg; delPer=0; BD_CK_SAM=1; PSINO=5; BD_HOME=0GET / HTTP/1.1</span><br><span class="line">Host: www.baidu.com</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</span><br><span class="line">Sec-Fetch-Site: none</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: BIDUPSID=F08DB5B2FD9E13D4B41996E638172B7E; PSTM=1573701135; BAIDUID=F08DB5B2FD9E13D4B19EAE477B7A6495:FG=1; BD_UPN=123253; BDORZ=B490B5EBF6F3CD402E515D22BCDA1598; H_PS_PSSID=1432_21114_30125_29567_29700_29221; H_PS_645EC=84a0DbiQzd2BHJhWsNQFFY6AzZdRfYqCefjKNfcjGAOJW8CxuHjm%2BQDhKZg; delPer=0; BD_CK_SAM=1; PSINO=5; BD_HOME=0</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>浏览器原理</tag>
      </tags>
  </entry>
  <entry>
    <title>JS基础之this篇</title>
    <url>/2019/06/20/JS%E5%9F%BA%E7%A1%80%E4%B9%8Bthis%E7%AF%87/</url>
    <content><![CDATA[<h2 id="this指向"><a href="#this指向" class="headerlink" title="this指向"></a>this指向</h2><p>相信this肯定很多人都会用，但是真要让自己去说this在什么情况下指向什么地方，可能就会有点迷糊。下面来一一列举一下。</p>
<ul>
<li>在方法中使用时，this —&gt;  所有者对象</li>
<li>单独使用时，  this —&gt;  全局对象</li>
<li>在函数中使用时，this —&gt;  全局对象<br>  注意： 如果启用了严格模式（use strict） 那么this就变成了undefined</li>
<li>在事件中使用时，this —&gt;  接收事件的元素<br>call 和 apply 可以改变this的指向，后面我们再说它</li>
</ul>
<blockquote>
<p>在方法中</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var obj = &#123;</span><br><span class="line">    a: 1,</span><br><span class="line">    b: function ()&#123;</span><br><span class="line">        return this.a</span><br><span class="line">        // 这里的this是指向所有者对象也就是obj</span><br><span class="line">        // this.a === obj.a</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>单独使用时</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var a = this;</span><br><span class="line">// this指向window</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在函数中</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function Fun() &#123;</span><br><span class="line">    return this;</span><br><span class="line">    // 这里this是指向全局对象也就是window</span><br><span class="line">&#125;</span><br><span class="line">// 如果是在严格模式下就是不一样的情况</span><br><span class="line">&quot;use strict&quot;;</span><br><span class="line">funtion Fun() &#123;</span><br><span class="line">    return this;</span><br><span class="line">    // 返回的是未定义的 undefined</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在事件中</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;button onclick=&quot;btn&quot;&gt;按钮&lt;/button&gt;</span><br><span class="line">function btn()&#123;</span><br><span class="line">    this.innerHTML = &apos;我不想叫按钮了~&apos;</span><br><span class="line">    // 这里的this是指向button这个元素的</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="call-和-apply"><a href="#call-和-apply" class="headerlink" title="call() 和 apply()"></a>call() 和 apply()</h2><p>首先他们的功能其实是一样的，不同点在于传参方式不一样。</p>
<p>他们都可以改变this的指向，调用一个对象的一个方法，用另一个对象替换当前的对象。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">obj1.call(obj2, args1,args2, ... argsN)</span><br><span class="line">obj1.apply(obj2, [args1, args2, ... argsN])</span><br></pre></td></tr></table></figure>

<blockquote>
<p>就是让obj2 调用 obj1 的方法，后面是传的参数</p>
</blockquote>
<p>这里还有一个小技巧，可以通过apply去找出数组中的最大值最小值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Math.max.apply(null, arr);  // 这就能找出arr数组中的最大值</span><br><span class="line">Math.min.apply(null, arr);  // 这就能找出arr数组中的最小值</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>this关键之</tag>
        <tag>call和apply</tag>
      </tags>
  </entry>
  <entry>
    <title>JS基础之正则篇</title>
    <url>/2019/06/19/%E6%AD%A3%E5%88%99%E9%AA%8C%E8%AF%81/</url>
    <content><![CDATA[<h1 id="正则验证"><a href="#正则验证" class="headerlink" title="正则验证"></a>正则验证</h1><h2 id="邮箱验证"><a href="#邮箱验证" class="headerlink" title="邮箱验证"></a>邮箱验证</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/^[a-z0-9]([a-z0-9]*[_-]?[a-z0-9]+)*@[a-z0-9]+[_-]?[a-z0-9]+[\.][a-z]&#123;2,3&#125;([\.][a-z]&#123;2&#125;)?$/i</span><br></pre></td></tr></table></figure>

<blockquote>
<p>拆分解读</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/ /     正则是用两个斜杠包裹起来的</span><br><span class="line">/^&amp;/    ^&amp;代表着开始结束</span><br><span class="line">/ /i    i代表不区分大小写</span><br><span class="line">[a-z0-9]    第一位必须是字母或数字</span><br><span class="line">([a-z0-9]*[_-]?[a-z0-9]+)*      ()*代表括号里面的可以是0个或多个</span><br><span class="line">[a-z0-9]*   字母和数字可以出现0次或多次</span><br><span class="line">[_-]?       _-这个符号只能出现0次或1次，其实就是不能同时连续写两个或多个横杠或下划线 --  __</span><br><span class="line">[a-z0-9]+   字母和数字最少出现一次，因为不能以-_ 结尾</span><br><span class="line">@       必写项</span><br><span class="line">[a-z0-9]+   @之后也同样不能以_-开始或结束</span><br><span class="line">[_-]?       </span><br><span class="line">[a-z0-9]+   </span><br><span class="line">[\.]        转义 \. 必写项</span><br><span class="line">[a-z]&#123;2,3&#125;  字母最少出现2次最多出现3次</span><br><span class="line">([\.][a-z]&#123;2&#125;)?     因为有的邮箱可能是 .com.cn结尾，所以需要再加上这么一段，括号里面代码出现0次或1次</span><br><span class="line">[\.]    </span><br><span class="line">[a-z]&#123;2&#125;      字母必须出现2个</span><br></pre></td></tr></table></figure>

<h2 id="手机号验证"><a href="#手机号验证" class="headerlink" title="手机号验证"></a>手机号验证</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/^1[3,4,5,6,7,8][0-9]&#123;9&#125;$/</span><br></pre></td></tr></table></figure>

<p>相对而言手机就简单很多了</p>
<p>通过上面的邮箱验证以及手机号验证，拆分解读，其实正则里大部分的东西都用到了。剩下的就是去根据实际需求去灵活运用了</p>
<p>下面列出一个参考手册</p>
<h3 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h3><table>
<thead>
<tr>
<th align="left">修饰符</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">i</td>
<td align="left">执行对大小写不敏感的匹配。</td>
</tr>
<tr>
<td align="left">g</td>
<td align="left">执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。</td>
</tr>
</tbody></table>
<h3 id="方括号"><a href="#方括号" class="headerlink" title="方括号"></a>方括号</h3><table>
<thead>
<tr>
<th align="left">表达式</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">[love]</td>
<td align="left">查找给定集合内的任何字符。。</td>
</tr>
<tr>
<td align="left">[^luck]</td>
<td align="left">查找给定集合外的任何字符。</td>
</tr>
<tr>
<td align="left">[0-9]</td>
<td align="left">查找任何从 0 至 9 的数字。</td>
</tr>
<tr>
<td align="left">[a-z]</td>
<td align="left">查找任何从小写 a 到小写 z 的字符。</td>
</tr>
<tr>
<td align="left">[A-Z]</td>
<td align="left">查找任何从大写 A 到大写 Z 的字符。</td>
</tr>
<tr>
<td align="left">[A-z]</td>
<td align="left">查找任何从大写 A 到小写 z 的字符。</td>
</tr>
<tr>
<td align="left">[love]</td>
<td align="left">查找给定集合内的任何字符。</td>
</tr>
<tr>
<td align="left">(red</td>
<td align="left">blue</td>
</tr>
</tbody></table>
<h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><table>
<thead>
<tr>
<th align="left">元字符</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">\w</td>
<td align="left">查找单词字符。</td>
</tr>
<tr>
<td align="left">\W</td>
<td align="left">查找非单词字符。</td>
</tr>
<tr>
<td align="left">\d</td>
<td align="left">查找数字。</td>
</tr>
<tr>
<td align="left">\D</td>
<td align="left">查找非数字字符。</td>
</tr>
<tr>
<td align="left">\s</td>
<td align="left">查找空白字符。</td>
</tr>
<tr>
<td align="left">\S</td>
<td align="left">查找非空白字符。</td>
</tr>
<tr>
<td align="left">\b</td>
<td align="left">匹配单词边界。</td>
</tr>
<tr>
<td align="left">\B</td>
<td align="left">匹配非单词边界。</td>
</tr>
<tr>
<td align="left">\n</td>
<td align="left">查找换行符。</td>
</tr>
<tr>
<td align="left">\r</td>
<td align="left">查找回车符。</td>
</tr>
<tr>
<td align="left">\t</td>
<td align="left">查找制表符。</td>
</tr>
<tr>
<td align="left">\v</td>
<td align="left">查找垂直制表符。</td>
</tr>
<tr>
<td align="left">\xxx</td>
<td align="left">查找以八进制数 xxx 规定的字符。</td>
</tr>
<tr>
<td align="left">\xdd</td>
<td align="left">查找以十六进制数 dd 规定的字符。</td>
</tr>
<tr>
<td align="left">\uxxxx</td>
<td align="left">查找以十六进制数 xxxx 规定的 Unicode 字符。</td>
</tr>
</tbody></table>
<h3 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h3><table>
<thead>
<tr>
<th align="left">量词</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">n+</td>
<td align="left">匹配任何包含至少一个 n 的字符串。</td>
</tr>
<tr>
<td align="left">n*</td>
<td align="left">匹配任何包含零个或多个 n 的字符串。</td>
</tr>
<tr>
<td align="left">n?</td>
<td align="left">匹配任何包含零个或一个 n 的字符串。</td>
</tr>
<tr>
<td align="left">n{X}</td>
<td align="left">匹配包含 X 个 n 的序列的字符串。</td>
</tr>
<tr>
<td align="left">n{X,Y}</td>
<td align="left">匹配包含 X 至 Y 个 n 的序列的字符串。</td>
</tr>
<tr>
<td align="left">n{X,}</td>
<td align="left">匹配包含至少 X 个 n 的序列的字符串。</td>
</tr>
<tr>
<td align="left">n$</td>
<td align="left">匹配任何结尾为 n 的字符串。</td>
</tr>
<tr>
<td align="left">^n</td>
<td align="left">匹配任何开头为 n 的字符串。</td>
</tr>
<tr>
<td align="left">?=n</td>
<td align="left">匹配任何其后紧接指定字符串 n 的字符串。</td>
</tr>
<tr>
<td align="left">?!n</td>
<td align="left">匹配任何其后没有紧接指定字符串 n 的字符串。</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>正则</tag>
        <tag>邮箱验证</tag>
        <tag>手机号验证</tag>
      </tags>
  </entry>
  <entry>
    <title>JS基础之数组篇</title>
    <url>/2019/06/17/JS%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h2 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 第一种： 可以直接通过 [] 来创建一个数组，这里可以是一个空数组，也可以默认给一些值</span><br><span class="line">var arr = [];    arr1 = [1, 2, 3, 4];</span><br><span class="line">// 第二种： 也可以通过new关键字来创建</span><br><span class="line">var arr = new Array();  arr 1 = new Array(1, 2, 3, 4);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>虽然有以上两种方式，但还是推荐第一种。<br>首先，第一种比第二种简洁，其次可读性和执行速度第一种都要优于第二种</p>
</blockquote>
<ul>
<li>数组是对象，在javascript中使用 <strong>typeof</strong> 运算符会返回 &quot;object&quot;。</li>
</ul>
<p>那么怎么去判断一个数组是数组？</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 第一种   但不支持老版本浏览器</span><br><span class="line">Array.isArray(arr) </span><br><span class="line"></span><br><span class="line">// 第二种   兼容写法，自己创建isArray() 函数来解决</span><br><span class="line">function isArray(arr)&#123;</span><br><span class="line">    return arr.constructor.toString().indexOf(&apos;Array&apos;) &gt; -1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 第三种   假如对象由给定的构造器创建，则 instanceof 运算符返回 true：</span><br><span class="line">var arr = [1, 2, 3];</span><br><span class="line">arr instanceof Array     // 返回 true</span><br></pre></td></tr></table></figure>

<h2 id="数组的方法"><a href="#数组的方法" class="headerlink" title="数组的方法"></a>数组的方法</h2><ol>
<li><p>push()       ==&gt;     在数组末尾添加元素</p>
</li>
<li><p>pop()        ==&gt;     在数组末尾删除元素</p>
</li>
<li><p>shift()      ==&gt;     在数组前面删除元素</p>
</li>
<li><p>unshift()    ==&gt;     在数组前面添加元素</p>
</li>
<li><p>toString()   ==&gt;     把数组转换为数组值（逗号分隔）的字符串。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var arr = [&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;];</span><br><span class="line">arr.toString();     // a,b,c,d</span><br></pre></td></tr></table></figure>
</li>
<li><p>join()       ==&gt;     数组转换字符串</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var arr = [&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;];</span><br><span class="line">arr.join(&apos;-&apos;);      // a-b-c-d</span><br></pre></td></tr></table></figure>
</li>
<li><p>delete       ==&gt;     删除某个元素</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">delete arr[1]           // 会把对应元素替换成undefined</span><br></pre></td></tr></table></figure>
</li>
<li><p>sort()      ==&gt;     数组排序</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var arr = [e, d, a, c];</span><br><span class="line">arr.sort()      // [a, c, d, e]</span><br></pre></td></tr></table></figure>

</li>
</ol>
<blockquote>
<p>注意，如果是对数字进行排序，超过10以上的数字排序，会出现问题</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var arr = [12, 7, 34, 4, 54]</span><br><span class="line">arr.sort()      // [12, 34, 4, 54, 7]</span><br><span class="line">arr.sort(function (a, b)&#123;return a -b&#125;)      // [4, 7, 12, 34, 54]</span><br><span class="line">arr.sort(function (a, b)&#123;return b -a&#125;)      // 从大到小</span><br></pre></td></tr></table></figure>

<ol start="8">
<li>reverse()     // 翻转数组    arr.reverse()</li>
</ol>
<ol start="9">
<li><p>Math.max()   Math.min() 找出数组中最大最小值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Math.max.apply(null, arr);</span><br><span class="line">Math.min.apply(null, arr);</span><br></pre></td></tr></table></figure>
</li>
<li><p>forEach()   ==&gt;     遍历数组，但中间不能执行break跳出循环或终止循环</p>
</li>
<li><p>map()       ==&gt;     遍历数组，可以执行跳出或终止循环，但如果里面是判断语句，返回的值为true和false组成的数组</p>
</li>
<li><p>filter()    ==&gt;     遍历数组，判断返回符合条件的值组成新数组</p>
</li>
<li><p>every()     ==&gt;     遍历数组，当所有值都满足条件，返回true，否则为false</p>
</li>
<li><p>some()      ==&gt;     遍历数组，当有一个值满足条件，就返回true，反之false</p>
</li>
<li><p>reduce()    ==&gt;     处理数组值累加、阶乘等，速度更快，性能更好</p>
</li>
<li><p>reduceRight()    ==&gt;     同上，不过是从右往左累加</p>
</li>
<li><p>indexOf()     ==&gt;       在数组中搜索元素值并返回其位置。    没有返回 -1</p>
</li>
<li><p>lastIndexOf()   ==&gt;     在数组中从末尾开始搜索元素值并返回其位置。没有返回 -1</p>
</li>
<li><p>find()      ==&gt;      返回通过测试函数的第一个数组元素的值。</p>
</li>
<li><p>findIndex()     ==&gt;     返回通过测试函数的第一个数组元素的索引。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Js数组</tag>
      </tags>
  </entry>
  <entry>
    <title>使用hexo搭建博客添加在线联系功能</title>
    <url>/2019/06/11/%E4%BD%BF%E7%94%A8ejs%E6%A8%A1%E6%9D%BF%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E5%9C%A8%E7%BA%BF%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<h2 id="博客新增在线联系功能"><a href="#博客新增在线联系功能" class="headerlink" title="博客新增在线联系功能"></a>博客新增在线联系功能</h2><p>这个在线联系功能是用 <strong>DaoVoice</strong> 做的</p>
<h3 id="第一步-注册-DaoVoice-账号"><a href="#第一步-注册-DaoVoice-账号" class="headerlink" title="第一步: 注册 DaoVoice 账号"></a>第一步: 注册 <a href="http://dashboard.daovoice.io/get-started?invite_code=e01c7cad" target="_blank" rel="noopener">DaoVoice</a> 账号</h3><p>我的邀请码是 <strong>e01c7cad</strong></p>
<p>完成后，会得到一个app_id，后面会用到<br><img src="https://s1.ax1x.com/2018/01/21/pW5yM8.png" alt="图片"></p>
<ul>
<li>基于hexo搭建的博客,网上有很多教程,但都是swig模板的主题去添加的。因为我用的是ejs模板的主题，所以语法上是不一样的</li>
</ul>
<h3 id="第二步-修改head-swig-head-ejs"><a href="#第二步-修改head-swig-head-ejs" class="headerlink" title="第二步: 修改head.swig / head.ejs"></a>第二步: 修改head.swig / head.ejs</h3><p>首先找到 /themes/next/layout/_partials/head.swig 这个文件，我的是 /themes/next/layout/_partials/head.ejs，在前面加上以下代码</p>
<p><strong>注意’//widget.daovoice.io/widget/123456.js’ 中js文件名改成自己的id就行：</strong></p>
<ul>
<li><p>如果你的文件后缀是 .swjg</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.daovoice %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&apos;https:&apos; == document.location.protocol ? &apos;https:&apos; : &apos;http:&apos;) + &quot;//widget.daovoice.io/widget/123456.js&quot;,&quot;daovoice&quot;)</span><br><span class="line">  daovoice(&apos;init&apos;, &#123;</span><br><span class="line">      app_id: &quot;&#123;&#123;theme.daovoice_app_id&#125;&#125;&quot;</span><br><span class="line">    &#125;);</span><br><span class="line">  daovoice(&apos;update&apos;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果你的文件后缀是 .ejs</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if (theme.daovoice) %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">     (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&apos;https:&apos; == document.location.protocol ? &apos;https:&apos; : &apos;http:&apos;) + &quot;//widget.daovoice.io/widget/123456.js&quot;,&quot;daovoice&quot;)</span><br><span class="line">    let app_id = &lt;%- JSON.stringify(theme.daovoice_app_id) %&gt;</span><br><span class="line">    daovoice(&apos;init&apos;, &#123;</span><br><span class="line">        app_id: app_id</span><br><span class="line">    &#125;);</span><br><span class="line">    daovoice(&apos;update&apos;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% &#125; %&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="第三步-主题配置文件添加"><a href="#第三步-主题配置文件添加" class="headerlink" title="第三步: 主题配置文件添加"></a>第三步: 主题配置文件添加</h3><p>在<strong>_config.yml</strong>文件中添加内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Online contact</span><br><span class="line">daovoice: true</span><br><span class="line">daovoice_app_id:   # 这里填你刚才获得的 app_id</span><br></pre></td></tr></table></figure>

<p>至此，博客的在线联系功能已经完成。</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>在线联系</tag>
        <tag>博客功能</tag>
      </tags>
  </entry>
  <entry>
    <title>《解忧杂货店》</title>
    <url>/2019/06/10/%E3%80%8A%E8%A7%A3%E5%BF%A7%E6%9D%82%E8%B4%A7%E5%BA%97%E3%80%8B/</url>
    <content><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1560184506713&di=08b6363c3e7267e1adf595c9a4ce54f5&imgtype=0&src=http%3A%2F%2Fn1.itc.cn%2Fimg8%2Fwb%2Frecom%2F2016%2F12%2F17%2F148194911938343146.JPEG" alt="图片"></p>
<h2 id="内容简介"><a href="#内容简介" class="headerlink" title="内容简介"></a>内容简介</h2><p>该书讲述了在僻静街道旁的一家杂货店，只要写下烦恼投进店前门卷帘门的投信口，第二天就会在店后的牛奶箱里得到回答：因男友身患绝症，年轻女孩月兔在爱情与梦想间徘徊；松冈克郎为了音乐梦想离家漂泊，却在现实中寸步难行；少年浩介面临家庭巨变，挣扎在亲情与未来的迷茫中……</p>
<p>他们将困惑写成信投进杂货店，奇妙的事情随即不断发生。</p>
<p>生命中的一次偶然交会,将如何演绎出截然不同的人生?</p>
<h2 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h2><p>东野圭吾（ひがしの けいご，Higashino Keigo），日本推理小说作家。代表作有《放学后》、《秘密》、《白夜行》、《以眨眼干杯》、《神探伽利略》、《嫌疑人X的献身》、《预知梦》、《湖畔》等。<br>1958年2月4日出生于日本大阪。毕业于大阪府立大学电气工学专业，之后在汽车零件供应商日本电装担任生产技术工程师，并进行推理小说的创作。1985年，凭借《放学后》获得第31回江户川乱步奖，从此成为职业作家，开始专职写作。<br>1999年《秘密》获第52届日本推理作家协会奖，2006年《嫌疑人X的献身》获134届直木奖，东野圭吾从而达成了日本推理小说史上罕见的“三冠王”。<br>2017年4月，第11届中国作家富豪榜子榜单“外国作家富豪榜”发布，东野圭吾问鼎外国作家富豪榜首位。同年出版小说集《第十年的情人节》。</p>
<h2 id="经典语句"><a href="#经典语句" class="headerlink" title="经典语句"></a>经典语句</h2><p>心，一旦离开了，就再不会回来。</p>
<p>其实所有纠结做选择的人心里早就有了答案，咨询只是想得到内心所倾诉的选择。最终的所谓命运，还是自己一步一步走出来的。</p>
<p>人与人之间的情断义绝，并不需要什么具体理由。就算表面上有，也很可能只是心已经离开的结果，事后才编造出的借口而已。因为倘若心没有离开，当将会导致关系破裂的事态发生时，理应有人努力去挽救。如果没有，说明其实关系早已破裂。</p>
<p>你的地图是一张白纸，所以即使想决定目的地，也不知道路在哪里。</p>
<p>换个角度，正因为是一张白纸，才可以随心所欲的描绘地图。一切全在你自己。对你来说，一切都是自由的，在你面前是无限的可能。这可是很棒的事啊。</p>
<p>虽然至今为止的道路绝非一片坦途，但想到正因为活着才有机会感受到痛楚，我就成功克服了种种困难。</p>
<p>人与人之间的关系往往不是因为某些具体的原因而断绝。不，即使表面上有某种原因，其实是因为彼此的心已经不在一起，事后才牵强附会地找这些借口。因为，如果彼此的心没有分开，当发生可能会导致彼此关系断绝的事态时，某一方就会主动修复。之所以没有人注重修复，就是因为彼此的心已经不在一起了。就好像眼看着船要沉了，仍然在一旁袖手旁观。</p>
<p>其实很久以前我就知道自己应该怎样选择，只是一直无法下决心舍弃梦想。到现在，我依然不知道怎样才能做到这一点。打个比方，这就如同单相思的感觉，明知恋情不会有结果，却还是忘不了对方。</p>
<p>其实若真正有才华，运气并不是那么重要</p>
<p>无论现在多么的不开心，你要相信，明天会比今天更好。</p>
<p>我的回答之所以发挥了作用，原因不是别的，是因为他们自己很努力。如果自己不想积极认真的生活，不管得到什么样的回答都没用。</p>
<p>他觉得一个人奋斗更轻松自在。跟没有干劲的人在一起厮混，只会徒增压力。</p>
<p>他们都是内心破了个洞，重要的东西正在从破洞中逐渐流失。</p>
<p>请不要一厢情愿的下结论。任何事情，不挑战一下是不知道结果的，对吧？</p>
<p>当你犹豫要不要去做一件事的时候，其实你内心已经有了选择，只是你还没有充足的理由去说服自己。</p>
<h2 id="读后感"><a href="#读后感" class="headerlink" title="读后感"></a>读后感</h2><pre><code>前两天和朋友聊天，让他推荐点书看看。然而他就回了四个字“东野圭吾”。不过随后我就去书店，谁知刚进店映入眼帘的就是他的书。《白夜行》、《嫌疑人X的献身》、《名侦探的守则》、《解忧杂货店》等...因为试读本被别人拿走的原因，我只能通过封面上那么简短的几句介绍去了解这些书。大多是推理类的，我现在的心境不太想读这种类型的，过段时间可能会读吧...最终选择了《解忧杂货店》。原因可能因为自己平时也比较烦恼吧。看通过这本书，能不能让自己找到解忧的方法。

故事是从三个犯了错刚成年的孩子，因为偷车暂避到一间很久没有人住的废弃屋也就是“浪矢杂货店”，在熟悉了屋内的基本情况以后，突然掉进卷帘门后瓦楞纸箱的一封信开始的。刚好漫漫长夜，可以通过读信回信来打发时间，随着几封信的往来，他们惊讶的发现这家店连接着过去和现在，而且屋内的时间流逝比外面慢很多。

第一封来信是一个以月兔自称的国家击剑运动员。她在努力训练争取参加奥运会和陪伴身患癌症时日所剩不多的恋人之间不断纠结。第二封是以鱼店音乐人自称的一个喜欢音乐但是始终没有成就的人投进来的。他在父母年事以高要回家继承鱼店和继续追求梦想之间不断纠结。随后是讲述店主浪矢熊治的故事，以及一个女人因为怀了有妇之夫的孩子以后生和不生之间纠结。第三封是一个出生在富裕家庭特别喜欢披头士音乐的孩子，因为家庭意外破产，父母决定潜逃避债，感受到家庭关系疏远想逃离却又无法下决定之间纠结。第四封是年幼父母双亡，后来被好心姨婆收养，白天在普通办公司工作，晚上做陪酒工作。在要不要辞掉工作和当某个男人的情人之间帮助家里摆脱经济困难之间纠结。其实他们之间都是有关联的，关联他们的就是一家叫丸光园的孤儿院。他们都在里面扮演过不同的角色。当然那三个犯错的刚成年的孩子也在里面待过。同时最后一个来信者又是三个孩子刚刚抢劫的人，故事到这也全部贯穿了起来。

总得来说，这是一本讲人和人之间真诚沟通的书。这几个人在通过几封来信和回信之后找到了自己的选择方向，同时也坚定了自己的选择。就像书里说的，其实所有纠结做选择的人心里早就有了答案，咨询只是想得到内心所倾诉的选择。最终的所谓命运，还是自己一步步走出来的。同时还有一种“天生我才必有用”观念，三个不良少年，通过自己的方式，也能给过去的人一些实用的人生建议。其实也有一种，道理我都懂，只是做不做的问题。

在现在这个社会，其实能做到这种真诚的沟通又有几个呢。如果我们也能像书里的人一样，多能站在对方的角度去考虑问题，又怎么会有那么多的烦恼呢。掌握了这个，其实也就能处理各种关系了吧。比如父母子女间的、上司员工间的、亲戚朋友间的...

无论遇到多大的困难，多么糟糕的事，只要你愿意敞开心扉，总会收到一些建议，即便可能这不是自己想要的，但你会明白同时也坚定自己想要的是什么了。

我衷心祈祷每一个人都可以相信自己，无悔的燃烧自己的人生。 </code></pre>]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>文学</tag>
        <tag>小说</tag>
      </tags>
  </entry>
  <entry>
    <title>《摆渡人》</title>
    <url>/2019/06/10/%E3%80%8A%E6%91%86%E6%B8%A1%E4%BA%BA%E3%80%8B/</url>
    <content><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1560184561035&di=cfc91b27b2c99a0d523e0b626e5397a1&imgtype=0&src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fq_70%2Cc_zoom%2Cw_640%2Fimages%2F20190201%2Fd8488b75ec7b464f940e187aac2b7e2b.jpeg" alt="图片"></p>
<h2 id="内容简介"><a href="#内容简介" class="headerlink" title="内容简介"></a>内容简介</h2><p>单亲女孩迪伦，15岁的世界一片狼藉：与母亲总是无话可说，在学校里经常受到同学的捉弄，唯一谈得来的好友也因为转学离开了。这一切都让迪兰感到无比痛苦。 她决定去看望久未谋面的父亲，然而，路上突发交通事故。等她拼命爬出火车残骸之后，却惊恐地发现，自己是唯一的幸存者，而 眼前，竟是一片荒原。</p>
<p>此时，迪兰看到不远处的山坡上一个男孩的身影。</p>
<p>男孩将她带离了事故现场。但是，迪兰很快意识到，男孩并不是偶然出现的路人，他似乎是特意在此等候。</p>
<p>命运，从他们相遇的那刻开始，发生了无法预料的转变……</p>
<h2 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h2><p>克莱儿•麦克福尔居住在苏格兰格拉斯哥南部，是英国文坛备受瞩目的实力作家。</p>
<p>她的作品往往在出其不意的情节架构中饱含感人至深的真情，贯穿着人生思索和人性独白。</p>
<p>《摆渡人》是她最著名的作品，一举摘得五项世界文学大奖，版权销售33个国家，是令千万读者灵魂震颤的心灵治愈小说。</p>
<h2 id="经典语句"><a href="#经典语句" class="headerlink" title="经典语句"></a>经典语句</h2><p>如果我真的存在，也是因为你需要我。（I exist because you need me.）</p>
<p>如果命运是一条孤独的河流，谁会是你灵魂的摆渡人？</p>
<p>因为你需要我，因为爱。</p>
<p>你们天人总是一厢情愿，总以为世人应该微笑着，那不是很残酷，没有人愿意。</p>
<p>人活着就会失去。你失去的不会再来，你争取的永远都会失去。</p>
<p>你之所以相信一个人说的话，是因为他说了你想听的话。</p>
<p>有些喜欢，就是麦田里曾降临过的风，只有当事人明了，而这的世界假装没发生。</p>
<p>每个人都有无法放弃的执念，为了这个执念我们背弃了神，潜于幽暗的河底，化身般若，一去不返。</p>
<p>每个人心里都有脆弱的一面，如果放大这种脆弱的话，没人想活。</p>
<p>忘川之畔，与君长相憩，烂泥之中，与君发相缠。</p>
<p>彼岸烟波流转，可有人寻我。对岸繁华三千，可有人渡我。</p>
<p>我们从虚空中来，每个人都抱着善与恶，有人升入天堂，有人堕入地狱，在无边的业火中，我想起你，想起从前，我们曾经离得那么近。</p>
<p>在光明出生以前，大地上充斥着黑暗，人类天生畏惧黑暗，那是光明无法抵达的阴霾之地，在那里涌动着令人恐惧的存在。</p>
<p>诞生于想象之中，流传于口舌之上，欲望，永远存在，生生不息。</p>
<p>单影难存，与君相联，影随身动，举止之间。化无形常随左右，谁又知影心之恋。欲与君相视，却又阴阳两别，只愿随身后，朝陪夜伴。</p>
<p>你有没有过这样的东西，沾染过你的体温，聆听过你的心事，它们得到爱，回报爱。你有没有丢弃过这样的东西，它们在黑暗的角落，想念着你。即使粉身碎骨，即使已过经年，终有一天，思念，会把它们带到你的身边。</p>
<p>我们还活着的时候，幸存者便逝去了，未来降临的时候，我们已经不再属于未来，那渴望已久的冥冥未知，不过是死亡罢了，唯有死亡。</p>
<h2 id="读后感"><a href="#读后感" class="headerlink" title="读后感"></a>读后感</h2><pre><code>《摆渡人》这是一本关于爱的书。让人充满爱和善良。

书中讲述了15岁的迪伦，在一团糟的氛围下，满怀期盼的去见素未谋面的父亲，然而，火车上出了事故。迪伦也因此死去。但书中讲到死亡其实并不意味着结束，只要跟随自己的摆渡人穿过一片荒原，那么就能到达彼岸，另一个世界所谓永生的“家”。

每个人都要穿过自己的荒原。在这里发现自己死去的事实，然后去接受真相。在行走期间，魔鬼会拼命抓住穿越的灵魂。只有在天黑前到达安全屋，才能免受灾难（被恶鬼吞噬，成为其中的一员)。至于荒原是什么样子，完全由灵魂去决定。心情会影响天气。“你的身体是你心像的投射。这片荒原也是一样的。当你从隧道出来的时候，你估摸着这几离阿伯丁还有一半路――身处高原的某个地方，一个偏僻、多山、荒凉的地方――所以荒原也就成了这个样子。你不喜欢锻炼，所以只要一走路，你的心情就糟透了。这个地方反映了你的所思所感。当你生气的时候，这里就阴云密布，狂风大作……一片漆黑。你的心里越阴郁，夜晚也就越黑暗。”

如果书中的世界维度是真的。谁又能确定我们现在不是身处荒原之中呢。我们从出生，然后学习成长，至于以后会去哪里，自己变成什么样子，谁又能说的清楚呢。成长过程中遇到的各种坎坷、挫折，谁又能确定不是那些恶鬼在作祟呢。一些人夭折，英年早逝，谁又能知道是不是被恶鬼拉入湖里呢。我们每个人对待世界的看法，悲观、乐观，谁又能确定这不是自己的性格造成的呢。我们所爱的人，谁又能知道他们是不是自己的摆渡人呢。

在那个所谓的家的地方，很多人悠然自得地生活在那里。例如，二战期间被上司枪毙的士兵乔纳斯――“我活着的时候总是想买辆车”，于是他在自己的“家乡”斯图加特，开车、修车，“现在我可以买得起自己想要的东西了。尽管我觉得不管我对它做什么它都会跑起来，但我还是喜欢假装这一切跟我有关系。我从荒原穿过来看到它的时候简直太激动了……”在乔纳斯走过荒原的时候，很平淡，十八岁就被枪毙了，他还没来得及体验爱情，于是车是他的最爱。我猜想，乔纳斯在荒原行走的时候，应该很无聊吧。在荒原上的一生，应该是寡淡的。还有，伊莱扎，那个告诉迪伦关于回去的秘密的、“在这里已经很久”的人，她每天坐在一把老式木摇椅上轻轻摇晃着，等待着，“我知道用不了多久丈夫就能来陪伴我了。”可是，谁知道呢，谁知道她的丈夫在穿越荒原时会不会发生意外，谁知道她的丈夫在抵达“家”的时候，会不会选择来见她。她“在这里已经很久了”，也许，上面所说的那些“谁知道”已经发生了。然而，她就是那么等待着，从来没有想过要回去找自己的爱人。因为，她怕，她问迪伦的话，就证明了一切――“你宁愿让自己的灵魂灰飞烟灭都要回去?”

所以，不是这个地方不让他们走，而是这些灵魂自己束缚了自己。

迪伦勇敢的迈出了这一步，因为爱，因为了坚定不移的爱。同时也是因为她的勇敢。那么故事最后，迪伦成功的和自己的摆渡人崔斯坦，永久的活在了那个“家”。因为她的勇敢，她的爱，她的善良，以及发现了可以拯救变成恶鬼的灵魂，终归还是影响到了很多人。

“伊莱扎握住圆形把手，然后深吸一口气，扭动了把手......她真的认为自己要在这里站上几个钟头，寻找勇气和信念，直到她完全确信自己真的想这么做。 但她只是轻轻一拧，门就开了”</code></pre>]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>文学</tag>
      </tags>
  </entry>
  <entry>
    <title>使用hexo写博客--简易步骤</title>
    <url>/2019/06/09/%E4%BD%BF%E7%94%A8hexo%E5%86%99%E5%8D%9A%E5%AE%A2-%E7%AE%80%E6%98%93%E6%AD%A5%E9%AA%A4/</url>
    <content><![CDATA[<h2 id="第一步-创建文章"><a href="#第一步-创建文章" class="headerlink" title="第一步 创建文章"></a>第一步 创建文章</h2><p>在文件根目录运行Bash</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new &quot;文章名&quot;</span><br></pre></td></tr></table></figure>

<h2 id="第二步-编辑文章"><a href="#第二步-编辑文章" class="headerlink" title="第二步 编辑文章"></a>第二步 编辑文章</h2><p>进入到 source/_posts 找到对应的文件,用编辑器去编写文章。<a href="https://rdhuang.gitee.io/2019/06/09/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/" target="_blank" rel="noopener">mackdown语法</a>在我的另一篇博客中有写到。</p>
<p>如果要预览可以执行下面代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>然后在浏览器输入 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p>
<h2 id="第三步-生成html"><a href="#第三步-生成html" class="headerlink" title="第三步 生成html"></a>第三步 生成html</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>

<h2 id="第四步-上传服务器"><a href="#第四步-上传服务器" class="headerlink" title="第四步 上传服务器"></a>第四步 上传服务器</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd public</span><br><span class="line">$ git add -A</span><br><span class="line">$ git commit -a -m &apos;编辑信息&apos;</span><br><span class="line">$ git push &quot;远程服务器地址&quot;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机基础知识---机器组成</title>
    <url>/2019/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E6%9C%BA%E5%99%A8%E7%BB%84%E6%88%90/</url>
    <content><![CDATA[<p>计算机是由<strong>硬件系统</strong>（hardware system）和<strong>软件系统</strong>（software system）两部分组成的。</p>
<p>传统电脑系统的硬体单元一般可分为输入单元、输出单元、算术逻辑单元、控制单元及记忆单元，其中算术逻辑单元和控制单元合称中央处理单元（Center Processing Unit,CPU)。</p>
<h2 id="硬件系统"><a href="#硬件系统" class="headerlink" title="硬件系统"></a>硬件系统</h2><ul>
<li><p>电源</p>
<p>  电源是电脑中不可缺少的供电设备，它的作用是将220V交流电转换为电脑中使用的5V、12V、3.3V直流电，其性能的好坏，直接影响到其他设备工作的稳定性，进而会影响整机的稳定性。手提电脑在自带锂电池情况下，为手提电脑提供有效电源。</p>
</li>
<li><p>主板</p>
<p>  主板是电脑中各个部件工作的一个平台，它把电脑的各个部件紧密连接在一起，各个部件通过主板进行数据传输。也就是说，电脑中重要的“交通枢纽”都在主板上，它工作的稳定性影响着整机工作的稳定性。</p>
</li>
<li><p>CPU</p>
<p>  CPU即中央处理器，是一台计算机的运算核心和控制核心。其功能主要是解释计算机指令以及处理计算机软件中的数据。CPU由运算器、控制器、寄存器、高速缓存及实现它们之间联系的数据、控制及状态的总线构成。作为整个系统的核心，CPU也是整个系统最高的执行单元，因此CPU已成为决定电脑性能的核心部件，很多用户都以它为标准来判断电脑的档次。</p>
</li>
<li><p>内存</p>
<p>  内存又叫内部存储器或者是随机存储器（RAM），分为DDR内存和SDRAM内存，（但是SDRAM由于容量低，存储速度慢，稳定性差，已经被DDR淘汰了）内存属于电子式存储设备，它由电路板和芯片组成，特点是体积小，速度快，有电可存，无电清空，即电脑在开机状态时内存中可存储数据，关机后将自动清空其中的所有数据。 内存有DDR、DDR II、DDR III三大类，容量1-64GB。</p>
</li>
<li><p>硬盘</p>
<p>  硬盘属于外部存储器，机械硬盘由金属磁片制成，而磁片有记忆功能，所以储到磁片上的数据，不论在开机，还是关机，都不会丢失。硬盘容量很大，已达TB级，尺寸有3.5、2.5、1.8、1.0英寸等，接口有IDE、SATA、SCSI等，SATA最普遍。移动硬盘是以硬盘为存储介质，强调便携性的存储产品。市场上绝大多数的移动硬盘都是以标准硬盘为基础的，而只有很少部分的是以微型硬盘（1.8英寸硬盘等）为基础，但价格因素决定着主流移动硬盘还是以标准笔记本硬盘为基础。因为采用硬盘为存储介质，因此移动硬盘在数据的读写模式与标准IDE硬盘是相同的。移动硬盘多采用USB、IEEE1394等传输速度较快的接口，可以较高的速度与系统进行数据传输。固态硬盘用固态电子存储芯片阵列而制成的硬盘，由控制单元和存储单元（FLASH芯片）组成。固态硬盘在产品外形和尺寸上也完全与普通硬盘一致但是固态硬盘比机械硬盘速度更快。</p>
</li>
<li><p>声卡</p>
<p>  声卡是组成多媒体电脑必不可少的一个硬件设备，其作用是当发出播放命令后，声卡将电脑中的声音数字信号转换成模拟信号送到音箱上发出声音。</p>
</li>
<li><p>显卡</p>
<p>  显卡在工作时与显示器配合输出图形、文字，作用是将计算机系统所需要的显示信息进行转换驱动，并向显示器提供行扫描信号，控制显示器的正确显示，是连接显示器和个人电脑主板的重要元件，是“人机对话”的重要设备之一。</p>
</li>
<li><p>网卡</p>
<p>  网卡是工作在数据链路层的网路组件，是局域网中连接计算机和传输介质的接口，不仅能实现与局域网传输介质之间的物理连接和电信号匹配，还涉及帧的发送与接收、帧的封装与拆封、介质访问控制、数据的编码与解码以及数据缓存的功能等。网卡的作用是充当电脑与网线之间的桥梁，它是用来建立局域网并连接到Internet的重要设备之一。</p>
<p>  在整合型主板中常把声卡、显卡、网卡部分或全部集成在主板上。</p>
</li>
<li><p>调制解调器</p>
<p>  英文名为“Modem”，俗称“猫”，即调制解调器，类型有内置式和外置式，有线式和无线式。调制解调器是通过电话线上网时必不可少的设备之一。它的作用是将电脑上处理的数字信号转换成电话线传输的模拟信号。随着ADSL宽带网的普及，内置式调制解调器逐渐退出了市场。</p>
</li>
<li><p>光驱</p>
<p>  英文名为“Optical Disk driver”，电脑用来读写光碟内容的机器，也是在台式机和笔记本便携式电脑里比较常见的一个部件。随着多媒体的应用越来越广泛，使得光驱在计算机诸多配件中已经成为标准配置。光驱可分为CD-ROM驱动器、DVD光驱（DVD-ROM）、康宝（COMBO）和DVD刻录机（DVD-RAM）等。读写的能力和速度也日益提升，4× 16× 32× 40× 48×。</p>
</li>
<li><p>显示器</p>
</li>
<li><p>键盘</p>
</li>
<li><p>鼠标</p>
</li>
<li><p>音箱</p>
</li>
<li><p>打印机</p>
</li>
<li><p>视频设备</p>
</li>
<li><p>闪存盘 ===&gt; U盘</p>
</li>
<li><p>移动存储卡及读卡器</p>
</li>
</ul>
<h2 id="软件系统"><a href="#软件系统" class="headerlink" title="软件系统"></a>软件系统</h2><p>所谓软件是指为方便使用计算机和提高使用效率而组织的程序以及用于开发、使用和维护的有关文档。软件系统可分为<strong>系统软件</strong>和<strong>应用软件</strong>两大类。</p>
<h3 id="系统软件"><a href="#系统软件" class="headerlink" title="系统软件"></a>系统软件</h3><p>系统软件System software,由一组控制计算机系统并管理其资源的程序组成，其主要功能包括：启动计算机，存储、加载和执行应用程序，对文件进行排序、检索，将程序语言翻译成机器语言等。实际上，系统软件可以看作用户与计算机的接口，它为应用软件和用户提供了控制、访问硬件的手段，这些功能主要由操作系统完成。此外，编译系统和各种工具软件也属此类，它们从另一方面辅助用户使用计算机。下面分别介绍它们的功能。</p>
<ol>
<li><p>操作系统（Operating System，OS） </p>
<p> 操作系统是管理、控制和监督计算机软、硬件资源协调运行的程序系统，由一系列具有不同控制和管理功能的程序组成，它是直接运行在计算机硬件上的、最基本的系统软件，是系统软件的核心。操作系统是计算机发展中的产物，它的主要目的有两个：一是方便用户使用计算机，是用户和计算机的接口。比如用户键入一条简单的命令就能自动完成复杂的功能，这就是操作系统帮助的结果；二是统一管理计算机系统的全部资源，合理组织计算机工作流程，以便充分、合理地发挥计算机的效率。操作系统通常应包括下列五大功能模块：</p>
<p> （1）处理器管理：当多个程序同时运行时，解决处理器（CPU）时间的分配问题。</p>
<p> （2）作业管理：完成某个独立任务的程序及其所需的数据组成一个作业。作业管理的任务主要是为用户提供一个使用计算机的界面使其方便地运行自己的作业，并对所有进入系统的作业进行调度和控制，尽可能高效地利用整个系统的资源。</p>
<p> （3）存储器管理：为各个程序及其使用的数据分配存储空间，并保证它们互不干扰。</p>
<p> （4）设备管理：根据用户提出使用设备的请求进行设备分配，同时还能随时接收设备的请求（称为中断），如要求输入信息。</p>
<p> （5）文件管理：主要负责文件的存储、检索、共享和保护，为用户提供文件操作的方便。</p>
<p> 操作系统的种类繁多，依其功能和特性分为分批处理操作系统、分时操作系统和实时操作系统等；依同时管理用户数的多少分为单用户操作系统和多用户操作系统；适合管理计算机网络环境的网络操作系统。</p>
<p> 微机操作系统随着微机硬件技术的发展而发展，从简单到复杂。Microsoft公司开发的DOS是一单用户单任务系统，而Windows操作系统则是一多户多任务系统，经过十几年的发展，已从Windows 3.1发展Windows NT、Windows 2000、Windows XP、Windows vista、Windows 7和Windows 8等等。它是当前微机中广泛使用的操作系统之一。Linux是一个源码公开的操作系统，程序员可以根据自己的兴趣和灵感对其进行改变，这让Linux吸收了无数程序员的精华，不断壮大，已被越来越多的用户所采用，是Windows操作系统强有力的竞争对手。</p>
</li>
<li><p>语言处理系统（翻译程序）</p>
<p> 人和计算机交流信息使用的语言称为计算机语言或称程序设计语言。计算机语言通常分为机器语言、汇编语言和高级语言三类。如果要在计算机上运行高级语言程序就必须配备程序语言翻译程序（下简称翻译程序）。翻译程序本身是一组程序，不同的高级语言都有相应的翻译程序。翻译的方法有两种：</p>
<p> 一种称为“解释”。早期的BASIC源程序的执行都采用这种方式。它调用机器配备的BASIC“解释程序”，在运行BASIC源程序时，逐条把BASIC的源程序语句进行解释和执行，它不保留目标程序代码，即不产生可执行文件。这种方式速度较慢，每次运行都要经过“解释”，边解释边执行。</p>
<p> 另一种称为“编译”，它调用相应语言的编译程序，把源程序变成目标程序（以.OBJ为扩展名），然后再用连接程序，把目标程序与库文件相连接形成可执行文件。尽管编译的过程复杂一些，但它形成的可执行文件（以.exe为扩展名）可以反复执行，速度较快。运行程序时只要键入可执行程序的文件名，再按Enter键即可。</p>
<p> 对源程序进行解释和编译任务的程序，分别叫作编译程序和解释程序。如FORTRAN、COBOL、PASCAL和C等高级语言，使用时需有相应的编译程序；BASIC、LISP等高级语言，使用时需用相应的解释程序。</p>
</li>
<li><p>服务程序</p>
<p> 服务程序能够提供一些常用的服务性功能，它们为用户开发程序和使用计算机提供了方便，像微机上经常使用的诊断程序、调试程序、编辑程序均属此类。</p>
</li>
<li><p>数据库管理系统</p>
<p> 数据库是指按照一定联系存储的数据集合，可为多种应用共享。数据库管理系统（Data Base Management System，DBMS）则是能够对数据库进行加工、管理的系统软件。其主要功能是建立、消除、维护数据库及对库中数据进行各种操作。数据库系统主要由数据库（DB）、数据库管理系统（DBMS）以及相应的应用程序组成。数据库系统不但能够存放大量的数据，更重要的是能迅速、自动地对数据进行检索、修改、统计、排序、合并等操作，以得到所需的信息。这一点是传统的文件柜无法作到的。</p>
<p> 数据库技术是计算机技术中发展最快、应用最广的一个分支。可以说，在今后的计算机应用开发中大都离不开数据库。因此，了解数据库技术犹其是微机环境下的数据库应用是非常必要的。</p>
</li>
</ol>
<h3 id="应用软件"><a href="#应用软件" class="headerlink" title="应用软件"></a>应用软件</h3><p>为解决各类实际问题而设计的程序系统称为应用软件。从其服务对象的角度，又可分为通用软件和专用软件两类。</p>
]]></content>
      <categories>
        <category>计算机知识</category>
      </categories>
      <tags>
        <tag>计算机知识</tag>
        <tag>机器组成</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机基础知识--发展史</title>
    <url>/2019/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E5%8F%91%E5%B1%95%E5%8F%B2/</url>
    <content><![CDATA[<!-- ## 计算机发展史 -->

<blockquote>
<p>计算工具的演化经历了由简单到复杂、从低级到高级的不同阶段，例如从“结绳记事”中的绳结到算筹、算盘计算尺、机械计算机等。它们在不同的历史时期发挥了各自的历史作用，同时也启发了现代电子计算机的研制思想。</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">标题</th>
<th align="left">内容</th>
</tr>
</thead>
<tbody><tr>
<td align="left">中文名</td>
<td align="left">计算机</td>
</tr>
<tr>
<td align="left">外文名</td>
<td align="left">computer</td>
</tr>
<tr>
<td align="left">时 间</td>
<td align="left">1946年</td>
</tr>
<tr>
<td align="left">第一台计算机</td>
<td align="left">ENIAC</td>
</tr>
<tr>
<td align="left">别 称</td>
<td align="left">电脑</td>
</tr>
<tr>
<td align="left">发明者</td>
<td align="left">约翰·冯·诺依曼</td>
</tr>
</tbody></table>
<p>1889年，美国科学家赫尔曼·何乐礼研制出以电力为基础的电动制表机，用以储存计算资料。</p>
<p>1930年，美国科学家范内瓦·布什造出世界上首台模拟电子计算机。</p>
<p>1946年2月14日，由美国军方定制的世界上第一台电子计算机“电子数字积分计算机”（ENIAC Electronic Numerical And Calculator）在美国宾夕法尼亚大学问世了。ENIAC（中文名：埃尼阿克）是美国奥伯丁武器试验场为了满足计算弹道需要而研制成的，这台计算器使用了17840支电子管，大小为80英尺×8英尺，重达28t（吨），功耗为170kW，其运算速度为每秒5000次的加法运算，造价约为487000美元。ENIAC的问世具有划时代的意义，表明电子计算机时代的<br>到来。在以后60多年里，计算机技术以惊人的速度发展，没有任何一门技术的性能价格比能在30年内增长6个数量级。</p>
<ul>
<li><strong>第1代：电子管数字机（1946—1958年）</strong></li>
</ul>
<p>硬件方面，逻辑元件采用的是真空电子管，主存储器采用汞延迟线阴极射线示波管静电存储器、磁鼓、磁芯；外存储器采用的是磁带。软件方面采用的是机器语言、汇编语言。应用领域以军事和科学计算为主。</p>
<p>特点是体积大、功耗高、可靠性差。速度慢（一般为每秒数千次至数万次）、价格昂贵，但为以后的计算机发展奠定了基础。</p>
<ul>
<li><strong>第2代：晶体管数字机（1958—1964年）</strong></li>
</ul>
<p>硬件方面的操作系统、高级语言及其编译程序应用领域以科学计算和事务处理为主，并开始进入工业控制领域。特点是体积缩小、能耗降低、可靠性提高、运算速度提高（一般为每秒数10万次，可高达300万次）、性能比第1代计算机有很大的提高</p>
<ul>
<li><strong>第3代：集成电路数字机（1964—1970年）</strong></li>
</ul>
<p>硬件方面，逻辑元件采用中、小规模集成电路（MSI、SSI），主存储器仍采用磁芯。软件方面出现了分时操作系统以及结构化、规模化程序设计方法。特点是速度更快（一般为每秒数百万次至数千万次），而且可靠性有了显著提高，价格进一步下降，产品走向了通用化、系列化和标准化等。应用领域开始进入文字处理和图形图像处理领域。</p>
<ul>
<li><strong>第4代：大规模集成电路机（1970年至今）</strong></li>
</ul>
<p>硬件方面，逻辑元件采用大规模和超大规模集成电路（LSI和VLSI）。软件方面出现了数据库管理系统、网络管理系统和面向对象语言等。1971年世界上第一台微处理器在美国硅谷诞生，开创了微型计算机的新时代。应用领域从科学计算、事务管理、过程控制逐步走向家庭。</p>
]]></content>
      <categories>
        <category>计算机知识</category>
      </categories>
      <tags>
        <tag>发展史</tag>
        <tag>计算机知识</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown基本语法</title>
    <url>/2019/06/09/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>Markdown支持6种级别的标题，对应html标签 h1 ~ h6</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># h1</span><br><span class="line">## h2</span><br><span class="line">### h3</span><br><span class="line">#### h4</span><br><span class="line">##### h5</span><br><span class="line">###### h6</span><br></pre></td></tr></table></figure>

<p>以上标记效果如下</p>
<h1 id="h1"><a href="#h1" class="headerlink" title="h1"></a>h1</h1><h2 id="h2"><a href="#h2" class="headerlink" title="h2"></a>h2</h2><h3 id="h3"><a href="#h3" class="headerlink" title="h3"></a>h3</h3><h4 id="h4"><a href="#h4" class="headerlink" title="h4"></a>h4</h4><h5 id="h5"><a href="#h5" class="headerlink" title="h5"></a>h5</h5><h6 id="h6"><a href="#h6" class="headerlink" title="h6"></a>h6</h6><p>除此之外，Markdown还支持另外一种形式的标题展示形式，其类似于 Setext 标记语言的表现形式，使用下划线进行文本大小的控制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这是一级标题</span><br><span class="line">===</span><br><span class="line">这是二级标题</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>使用这种方式处理标题仅有两种表现形式，即一级标题和二级标题。</p>
<h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><p>这种处理方式在Github的一些开源工程上面比较常见，显而易见的缺点是：文字大小控制级别有限。</p>
<h2 id="段落及区块引用"><a href="#段落及区块引用" class="headerlink" title="段落及区块引用"></a>段落及区块引用</h2><p>需要记住的是，Markdown其实就是一种易于编写的普通文本，只不过加入了部分渲染文本的标签而已。其最终依然会转换为html标签，因此使用Markdown分段非常简单，前后至少保留一个空行即可。</p>
<p>而另外一个比较常见的需求就是，我们可能希望对某段文字进行强调处理。Markdown提供了一个特殊符号&gt;用于段首进行强调，被强调的文字部分将会高亮显示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 这段文字将被高亮显示...</span><br></pre></td></tr></table></figure>

<p>以上标记显示效果如下：</p>
<blockquote>
<p>这段文字将被高亮显示…</p>
</blockquote>
<h2 id="插入链接或图片"><a href="#插入链接或图片" class="headerlink" title="插入链接或图片"></a>插入链接或图片</h2><p>*Markdown针对链接和图片的处理也比较简单，可以使用下面的语法进行标记</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[点击跳转至我的博客](https://github.com/RDHuang)</span><br><span class="line">![图片](路径)</span><br></pre></td></tr></table></figure>

<p>以上标记显示效果如下：</p>
<p><a href="https://rdhuang.github.io" target="_blank" rel="noopener">点击跳转至我的博客</a></p>
<!-- ![图片]() -->

<p>注： 引用图片和链接的唯一区别就是在最前方添加一个感叹号。</p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p> Markdown支持有序列表和无序列表两种形式：</p>
<ul>
<li>无序列表使用*或+或-标识</li>
<li>有序列表使用数字加.标识，例如：1.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* 张三</span><br><span class="line">* 李四</span><br><span class="line">* 王五</span><br><span class="line"></span><br><span class="line">+ 张三</span><br><span class="line">+ 李四</span><br><span class="line">+ 王五</span><br><span class="line"></span><br><span class="line">- 张三</span><br><span class="line">- 李四</span><br><span class="line">- 王五</span><br><span class="line"></span><br><span class="line">1. 张三</span><br><span class="line">2. 李四</span><br><span class="line">3. 王五</span><br></pre></td></tr></table></figure>

<p>以上标记显示效果如下：</p>
<ul>
<li>张三</li>
<li>李四</li>
<li>王五</li>
</ul>
<ul>
<li>张三</li>
<li>李四</li>
<li>王五</li>
</ul>
<ul>
<li>张三</li>
<li>李四</li>
<li>王五</li>
</ul>
<ol>
<li>张三</li>
<li>李四</li>
<li>王五</li>
</ol>
<p>注：这里比较有趣的地方是，对于有序列表，Markdown将只关注你的第一个项目的数字编号。例如：如果第一个项目编号是3，以此类推，第二个项目应该是4，最终将显示为3、4、5。而如果你指定了第一个编号，后面的编号指定错误也没有关系，Markdown将只在乎你的第一个项目编号。</p>
<h2 id="使用列表的一些注意事项"><a href="#使用列表的一些注意事项" class="headerlink" title="使用列表的一些注意事项"></a>使用列表的一些注意事项</h2><p>如果在单一列表项中包含了多个段落，为了保证渲染正常，*与段落首字母之间必须保留四个空格</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*    段落一</span><br><span class="line"></span><br><span class="line">     小段一</span><br><span class="line">*    段落二</span><br><span class="line"></span><br><span class="line">     小段二</span><br></pre></td></tr></table></figure>

<p>以上标记显示效果如下：</p>
<ul>
<li><p>段落一</p>
<p>小段一</p>
</li>
<li><p>段落二</p>
<p>小段二</p>
</li>
</ul>
<p>另外，如果在列表中加入了区块引用，区域引用标记符也需要缩进4个空格</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* 段落一</span><br><span class="line">    &gt; 区块标记一</span><br><span class="line">* 段落二</span><br><span class="line">    &gt; 区块标记二</span><br></pre></td></tr></table></figure>

<p>以上标记显示效果如下：</p>
<ul>
<li>段落一<blockquote>
<p>区块标记一</p>
</blockquote>
</li>
<li>段落二<blockquote>
<p>区块标记二</p>
</blockquote>
</li>
</ul>
<p>注：记住一个原则，如果在和列表配合使用的时候出现了问题，就缩进一次，四个空格或者一个制表符代表一次缩进。如果一次缩进没有解决问题，那就两次。</p>
<h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>有时候，为了排版漂亮，可能会加入分隔线。Markdown加入分隔线非常简单，使用下面任意一种形式都可以</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">一行文字</span><br><span class="line">***</span><br><span class="line">一行文字</span><br><span class="line">---</span><br><span class="line">一行文字</span><br></pre></td></tr></table></figure>

<p>以上标记显示效果如下：</p>
<p>一行文字</p>
<hr>
<h2 id="一行文字"><a href="#一行文字" class="headerlink" title="一行文字"></a>一行文字</h2><p>一行文字</p>
<p>产生分隔线的语法要求比较松，符号之间添加空格也可以</p>
<h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><p>有时候，我们希望对某一部分文字进行强调，使用*或_包裹即可。使用单一符号标记的效果是斜体，使用两个符号标记的效果是加粗</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*这里是斜体*</span><br><span class="line">_这里是斜体_</span><br><span class="line"></span><br><span class="line">**这里是加粗**</span><br><span class="line">__这里是加粗__</span><br></pre></td></tr></table></figure>

<p>以上标记显示效果如下：</p>
<p><em>这里是斜体</em><br><em>这里是斜体</em></p>
<p><strong>这里是加粗</strong><br><strong>这里是加粗</strong></p>
<h2 id="插入代码块"><a href="#插入代码块" class="headerlink" title="插入代码块"></a>插入代码块</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">代码上下用三个反引号 ``` 给包裹起来就行了</span><br></pre></td></tr></table></figure>

<p>注：很多人不知道怎么输入反引号。在英文模式下，找到键盘最左侧esc键下面的第一个键点击即可。</p>
<h2 id="插入表格"><a href="#插入表格" class="headerlink" title="插入表格"></a>插入表格</h2><p>表格是Markdown语法中比较复杂的一个，其语法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">表头|条目一|条目二</span><br><span class="line">:---:|:---:|:---:</span><br><span class="line">项目|项目一|项目二</span><br></pre></td></tr></table></figure>

<p>以上标记显示效果如下：</p>
<table>
<thead>
<tr>
<th align="center">表头</th>
<th align="center">条目一</th>
<th align="center">条目二</th>
</tr>
</thead>
<tbody><tr>
<td align="center">项目</td>
<td align="center">项目一</td>
<td align="center">项目二</td>
</tr>
</tbody></table>
<p>注：三个短斜杠左右的冒号用于控制对齐方式，只放置左边冒号表示文字居左，只放置右边冒号表示文字居右，如果两边都放置冒号表示文字居中。</p>
<h2 id="特殊符号处理"><a href="#特殊符号处理" class="headerlink" title="特殊符号处理"></a>特殊符号处理</h2><p>Markdown使用反斜杠\插入语法中用到的特殊符号。在Markdown中，主要有以下几种特殊符号需要处理：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   底线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  括弧</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   惊叹号</span><br></pre></td></tr></table></figure>

<p>例如，如果你需要插入反斜杠，就连续输入两个反斜杠即可：\\ =&gt; \ 。</p>
<p>注：在内容中输入以上特殊符号的时候一定要注意转义，否则将导致内容显示不全，甚至排版混乱。</p>
<p>附: 参考 简书 欧阳峰 附上链接 <a href="https://www.jianshu.com/p/335db5716248" target="_blank" rel="noopener">最完整的Markdown基础教程</a></p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>编辑器</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>个人博客使用hexo搭建</title>
    <url>/2019/06/08/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="使用hexo搭建博客"><a href="#使用hexo搭建博客" class="headerlink" title="使用hexo搭建博客"></a>使用hexo搭建博客</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：</p>
<ul>
<li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>(至少是6.9版本以上)</li>
<li><a href="https://git-scm.com/" target="_blank" rel="noopener">git</a></li>
</ul>
<p>如果已经安装上诉必备程序,那么接下来就可以直接使用npm安装hexo</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><p>安装hexo以后,执行下面代码,初始化一个项目</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>

<p>新建完成后,指定文件夹的目录如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml         // 网站的配置信息</span><br><span class="line">├── package.json        // 应用程勋的信息</span><br><span class="line">├── scaffolds           // 模板文件夹</span><br><span class="line">├── source              // 资源文件夹</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes              // 主题文件夹</span><br></pre></td></tr></table></figure>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>您可以在 _config.yml 中修改大部分的配置。</p>
<h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">title</td>
<td align="left">网站标题</td>
</tr>
<tr>
<td align="left">subtitle</td>
<td align="left">网站副标题</td>
</tr>
<tr>
<td align="left">description</td>
<td align="left">网站描述</td>
</tr>
<tr>
<td align="left">author</td>
<td align="left">您的名字</td>
</tr>
<tr>
<td align="left">language</td>
<td align="left">网站使用的语言</td>
</tr>
<tr>
<td align="left">timezone</td>
<td align="left">网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</td>
</tr>
</tbody></table>
<p>其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。</p>
<h3 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h3><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left">url</td>
<td align="left">网址</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">root</td>
<td align="left">网站根目录</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">permalink</td>
<td align="left">文章的<em>永久链接</em>格式</td>
<td align="left">:year/:month/:day/:title/</td>
</tr>
<tr>
<td align="left">permalink_defaults</td>
<td align="left">永久链接中各部分的默认值</td>
<td align="left"></td>
</tr>
</tbody></table>
<blockquote>
<p><strong>网站存放在子目录</strong></p>
<p>如果您的网站存放在子目录中，例如 <a href="http://yoursite.com/blog，则请将您的">http://yoursite.com/blog，则请将您的</a> url 设为 <a href="http://yoursite.com/blog">http://yoursite.com/blog</a> 并把 root 设为 /blog/。</p>
</blockquote>
<h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left">source_dir</td>
<td align="left">资源文件夹，这个文件夹用来存放内容。</td>
<td align="left">source</td>
</tr>
<tr>
<td align="left">public_dir</td>
<td align="left">公共文件夹，这个文件夹用于存放生成的站点文件。</td>
<td align="left">public</td>
</tr>
<tr>
<td align="left">tag_dir</td>
<td align="left">标签文件夹</td>
<td align="left">tags</td>
</tr>
<tr>
<td align="left">archive_dir</td>
<td align="left">归档文件夹</td>
<td align="left">archives</td>
</tr>
<tr>
<td align="left">category_dir</td>
<td align="left">分类文件夹</td>
<td align="left">categories</td>
</tr>
<tr>
<td align="left">code_dir</td>
<td align="left">Include code 文件夹</td>
<td align="left">downloads/code</td>
</tr>
<tr>
<td align="left">i18n_dir</td>
<td align="left">国际化（i18n）文件夹</td>
<td align="left">:lang</td>
</tr>
<tr>
<td align="left">skip_render</td>
<td align="left">跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。</td>
<td align="left"></td>
</tr>
</tbody></table>
<blockquote>
<p><strong>提示</strong></p>
<p>如果您刚刚开始接触Hexo，通常没有必要修改这一部分的值。</p>
</blockquote>
<h3 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h3><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left">new_post_name</td>
<td align="left">新文章的文件名称</td>
<td align="left">:title.md</td>
</tr>
<tr>
<td align="left">default_layout</td>
<td align="left">预设布局</td>
<td align="left">post</td>
</tr>
<tr>
<td align="left">auto_spacing</td>
<td align="left">在中文和英文之间加入空格</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left">titlecase</td>
<td align="left">把标题转换为 title case</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left">external_link</td>
<td align="left">在新标签中打开链接</td>
<td align="left">true</td>
</tr>
<tr>
<td align="left">filename_case</td>
<td align="left">把文件名称转换为 (1) 小写或 (2) 大写</td>
<td align="left">0</td>
</tr>
<tr>
<td align="left">render_drafts</td>
<td align="left">显示草稿</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left">post_asset_folder</td>
<td align="left">启动 Asset 文件夹</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left">relative_link</td>
<td align="left">把链接改为与根目录的相对位址</td>
<td align="left">false</td>
</tr>
<tr>
<td align="left">future</td>
<td align="left">显示未来的文章</td>
<td align="left">true</td>
</tr>
<tr>
<td align="left">highlight</td>
<td align="left">代码块的设置</td>
<td align="left"></td>
</tr>
</tbody></table>
<blockquote>
<p>相对地址</p>
<p>默认情况下，Hexo生成的超链接都是绝对地址。例如，如果您的网站域名为example.com,您有一篇文章名为hello，那么绝对链接可能像这样：<a href="http://example.com/hello.html，它是绝对于域名的。相对链接像这样：/hello.html，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。" target="_blank" rel="noopener">http://example.com/hello.html，它是绝对于域名的。相对链接像这样：/hello.html，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。</a></p>
</blockquote>
<h3 id="分类-amp-标签"><a href="#分类-amp-标签" class="headerlink" title="分类 &amp; 标签"></a>分类 &amp; 标签</h3><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left">default_category</td>
<td align="left">默认分类</td>
<td align="left">uncategorized</td>
</tr>
<tr>
<td align="left">category_map</td>
<td align="left">分类别名</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">tag_map</td>
<td align="left">标签别名</td>
<td align="left"></td>
</tr>
</tbody></table>
<h3 id="日期-时间格式"><a href="#日期-时间格式" class="headerlink" title="日期 / 时间格式"></a>日期 / 时间格式</h3><p>Hexo 使用 <a href="http://momentjs.com/" target="_blank" rel="noopener">Moment.js</a> 来解析和显示时间。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left">date_format</td>
<td align="left">日期格式</td>
<td align="left">YYYY-MM-DD</td>
</tr>
<tr>
<td align="left">time_format</td>
<td align="left">时间格式</td>
<td align="left">H:mm:ss</td>
</tr>
</tbody></table>
<h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left">per_page    每页显示的文章量 (0 = 关闭分页功能)</td>
<td align="left">10</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">pagination_dir</td>
<td align="left">分页目录</td>
<td align="left">page</td>
</tr>
</tbody></table>
<h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">theme</td>
<td align="left">当前主题名称。值为false时禁用主题</td>
</tr>
<tr>
<td align="left">deploy</td>
<td align="left">部署部分的设置</td>
</tr>
</tbody></table>
<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br></pre></td></tr></table></figure>

<p>新建一个网站. 如果没有设置folder,hexo默认在当前文件夹建立网站</p>
<h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>

<p>新建一篇文章. 如果没有设置 <strong>layout</strong> 的话，默认使用 <strong>_config.yml</strong> 中的 <strong>default_layout</strong> 参数代替。如果标题包含空格的话，请使用引号括起来。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new &quot;包含 空格 的 一个 标题&quot;</span><br></pre></td></tr></table></figure>

<h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo generate   =简=化=写=法=&gt;  hexo g</span><br></pre></td></tr></table></figure>

<p>生成静态文件</p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-d, –deploy</td>
<td align="left">文件生成后立即部署网站</td>
</tr>
<tr>
<td align="left">-w, –watch</td>
<td align="left">监视文件变动</td>
</tr>
</tbody></table>
<h3 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>

<p>发表草稿。</p>
<h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo server   =简=化=写=法=&gt;  hexo s</span><br></pre></td></tr></table></figure>

<p>启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-p, –port</td>
<td align="left">重设端口</td>
</tr>
<tr>
<td align="left">-s, –static</td>
<td align="left">只使用静态文件</td>
</tr>
<tr>
<td align="left">-l, –log</td>
<td align="left">启动日记记录，使用覆盖记录格式</td>
</tr>
</tbody></table>
<h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo deplop   =简=化=写=法=&gt;  hexo d</span><br></pre></td></tr></table></figure>

<p>部署网站<br>参数|描述<br>:—|:—<br>-g,–generate|部署之前预先生成静态文件</p>
<h3 id="render"><a href="#render" class="headerlink" title="render"></a>render</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>

<p>渲染文件</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-o, –output</td>
<td align="left">设置输出路径</td>
</tr>
</tbody></table>
<h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure>

<p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p>
<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令</p>
<h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo list &lt;type&gt;</span><br></pre></td></tr></table></figure>

<p>列出网站资料</p>
<h3 id="version"><a href="#version" class="headerlink" title="version"></a>version</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></table></figure>

<p>显示 Hexo 版本。</p>
<h3 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a>安全模式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --safe</span><br></pre></td></tr></table></figure>

<p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p>
<h3 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --debug</span><br></pre></td></tr></table></figure>

<p>在终端中显示调试信息并记录到 debug.log。当您碰到问题时，可以尝试用调试模式重新执行一次，并<a href="https://github.com/hexojs/hexo/issues/new" target="_blank" rel="noopener">提交调试信息到 GitHub</a>。</p>
<h3 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a>简洁模式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --silent</span><br></pre></td></tr></table></figure>

<p>隐藏终端信息</p>
<h3 id="自定义配置文件的路径"><a href="#自定义配置文件的路径" class="headerlink" title="自定义配置文件的路径"></a>自定义配置文件的路径</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --config custom.yml</span><br></pre></td></tr></table></figure>

<p>自定义配置文件的路径，执行后将不再使用 _config.yml。</p>
<h3 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a>显示草稿</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --draft</span><br></pre></td></tr></table></figure>

<p>显示 source/_drafts 文件夹中的草稿文章。</p>
<h3 id="自定义-CWD"><a href="#自定义-CWD" class="headerlink" title="自定义 CWD"></a>自定义 CWD</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure>

<p>自定义当前工作目录（Current working directory）的路径。</p>
<h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><blockquote>
<p>有些配置是需要根据自己选择的主题去配置的。如评论/阅读量/访问量等等</p>
</blockquote>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>项目搭建</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
